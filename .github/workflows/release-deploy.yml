name: Deploy & Release

on:
  pull_request:
    types: [closed]
    branches:
      - releases

jobs:
  release:
    if: |
      github.event.pull_request.merged == true &&
      startsWith(github.event.pull_request.title, 'Prepare Release')
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '20'
          cache: 'npm'

      - name: Install dependencies
        run: npm ci

#      - name: Run Changeset Release
#        run: npm run release

      - name: Fetch and switch to master
        run: |
          git fetch origin master
          git checkout master
          git pull origin master

      - name: Set up Git identity
        run: |
          git config user.name "Govind Kumar"
          git config user.email "govind.kumar@incsub.com"

      - name: Get version and date
        id: meta
        run: |
          VERSION=$(node -p "require('./package.json').version")
          DATE=$(date +'%Y-%m-%d')
          echo "VERSION=$VERSION" >> $GITHUB_OUTPUT
          echo "DATE=$DATE" >> $GITHUB_OUTPUT

      - name: Extract latest changelog entry
        id: changelog
        run: |
          VERSION=${{ steps.meta.outputs.VERSION }}
          awk -v version="## $VERSION" '
            BEGIN {print_flag=0}
            $0 ~ version {print_flag=1; next}
            /^## / && print_flag {exit}
            print_flag {print}
          ' CHANGELOG.md > RELEASE_BODY.md
          
      - name: Tag the master branch
        run: |
          git tag v${{ steps.meta.outputs.VERSION }}
          git push origin ${{ steps.meta.outputs.VERSION }}

      - name: Create GitHub Release
        uses: softprops/action-gh-release@v1
        with:
          tag_name: v${{ steps.meta.outputs.VERSION }}
          name: v${{ steps.meta.outputs.VERSION }} (${{ steps.meta.outputs.DATE }})
          body_path: RELEASE_BODY.md
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}