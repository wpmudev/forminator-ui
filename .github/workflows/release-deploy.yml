name: Deploy & Release

on:
  push:
    branches:
      - releases
  workflow_dispatch:
    inputs:
      version:
        description: 'Version number for the release (e.g., 1.12.35)'
        required: true
        type: string

jobs:
  release:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '20'
          cache: 'npm'

      - name: Install dependencies
        run: npm ci

      #      - name: Run Changeset Release
      #        run: npm run release

      - name: Get version and date
        id: meta
        run: |
          VERSION=$(node -p "require('./package.json').version")
          DATE=$(date +'%Y-%m-%d')
          echo "VERSION=$VERSION" >> $GITHUB_OUTPUT
          echo "DATE=$DATE" >> $GITHUB_OUTPUT

      - name: Set up Git identity
        run: |
          git config user.name "Govind Kumar"
          git config user.email "govind.kumar@incsub.com"

      - name: Extract Changelog
        id: extract_changelog
        run: |
          # Extract the latest version number
          LATEST_VERSION=$(grep -oP '^## \K[\d\.]+' CHANGELOG.md | head -1)
          if [ -z "$LATEST_VERSION" ]; then
            echo "Error: No version found in CHANGELOG.md"
            exit 1
          fi
          # Extract changelog for the latest version
          CHANGELOG=$(awk "/^## ${LATEST_VERSION}/,/^## /{if (!/^## /) print}" CHANGELOG.md | sed '/^$/d' | sed 's/^### /#### /')
          if [ -z "$CHANGELOG" ]; then
            echo "Error: No changelog content found for version ${LATEST_VERSION}"
            exit 1
          fi
          # Escape special characters for GitHub output
          CHANGELOG="${CHANGELOG//'%'/'%25'}"
          CHANGELOG="${CHANGELOG//$'\n'/'%0A'}"
          CHANGELOG="${CHANGELOG//$'\r'/'%0D'}"
          echo "version=${LATEST_VERSION}" >> $GITHUB_OUTPUT
          echo "changelog=${CHANGELOG}" >> $GITHUB_OUTPUT
        shell: bash

      - name: Fetch and switch to master
        run: |
          git fetch origin master
          git checkout master
          git pull origin master

      - name: Tag the master branch
        run: |
          git tag v${{ steps.meta.outputs.VERSION }}
          git push origin v${{ steps.meta.outputs.VERSION }}

      - name: Create GitHub Release
        uses: softprops/action-gh-release@v1
        with:
          tag_name: v${{ steps.meta.outputs.VERSION }}
          name: v${{ steps.meta.outputs.VERSION }} (${{ steps.meta.outputs.DATE }})
          body: ${{ steps.extract_changelog.outputs.changelog }}
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}