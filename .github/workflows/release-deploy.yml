name: Deploy & Release

on:
  push:
    branches:
      - releases
  workflow_dispatch:
    inputs:
      version:
        description: 'Version number for the release (e.g., 1.12.35)'
        required: true
        type: string

jobs:
  release:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '20'
          cache: 'npm'

      - name: Install dependencies
        run: npm ci

      #      - name: Run Changeset Release
      #        run: npm run release

      - name: Get version and date
        id: meta
        run: |
          VERSION=$(node -p "require('./package.json').version")
          DATE=$(date +'%Y-%m-%d')
          echo "VERSION=$VERSION" >> $GITHUB_OUTPUT
          echo "DATE=$DATE" >> $GITHUB_OUTPUT

      - name: Set up Git identity
        run: |
          git config user.name "Govind Kumar"
          git config user.email "govind.kumar@incsub.com"

      - name: Extract Changelog
        id: extract_changelog
        shell: bash  # âœ… put this OUTSIDE the run block
        run: |
          # Get today's date
          TODAY=$(date +%F)

          # Get the first version header (e.g., "## 1.12.35" or "## [1.12.34](...)")
          LATEST_LINE=$(grep -m1 '^## ' CHANGELOG.md)
          if [ -z "$LATEST_LINE" ]; then
            echo "No version section found"
            exit 1
          fi

          # Extract version number
          LATEST_VERSION=$(echo "$LATEST_LINE" | sed -E 's/^## ?\[*([0-9\.]+).*/\1/')

          # Extract changelog body for that version
          CHANGELOG_BODY=$(awk -v ver="$LATEST_VERSION" '
            $0 ~ "^## " {
              if (found) exit
              if ($0 ~ ver) { found = 1; next }
            }
            found { print }
          ' CHANGELOG.md)

          # Final changelog format
          FORMATTED_CHANGELOG="v${LATEST_VERSION} (${TODAY})
          ${CHANGELOG_BODY}"
          
          # Escape for GitHub Actions output
          FORMATTED_CHANGELOG="${FORMATTED_CHANGELOG//'%'/'%25'}"
          FORMATTED_CHANGELOG="${FORMATTED_CHANGELOG//$'\n'/'%0A'}"
          FORMATTED_CHANGELOG="${FORMATTED_CHANGELOG//$'\r'/'%0D'}"
          
          echo "version=${LATEST_VERSION}" >> $GITHUB_OUTPUT
          echo "changelog=${FORMATTED_CHANGELOG}" >> $GITHUB_OUTPUT
            
      - name: Fetch and switch to master
        run: |
          git fetch origin master
          git checkout master
          git pull origin master

      - name: Tag the master branch
        run: |
          git tag v${{ steps.meta.outputs.VERSION }}
          git push origin v${{ steps.meta.outputs.VERSION }}

      - name: Create GitHub Release
        uses: softprops/action-gh-release@v1
        with:
          tag_name: v${{ steps.meta.outputs.VERSION }}
          name: v${{ steps.meta.outputs.VERSION }} (${{ steps.meta.outputs.DATE }})
          body: ${{ steps.extract_changelog.outputs.changelog }}
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}