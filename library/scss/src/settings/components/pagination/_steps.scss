@mixin pagination-steps($form-type: no-type, $form-theme: no-theme) {

	@include form-class($form-type, $form-theme, false) {

		@if ('material' != $form-theme) {

			.forminator-pagination-steps {
				display: block;
				margin: 0 0 $gutter-sm;

				.forminator-break {
					@if ('default' == $form-theme or 'basic' == $form-theme) {
						width: map-get($border-width, default);
						height: #{map-get($pagination-dot, default) * 2};
					}
					@if ('flat' == $form-theme) {
						width: 1px;
						height: #{map-get($pagination-dot, flat) * 2};
					}
					@if ('bold' == $form-theme) {
						width: map-get($border-width, bold);
						height: #{map-get($pagination-dot, bold) * 2};
					}
					display: block;
					@if ('default' == $form-theme or 'basic' == $form-theme) {
						margin: 0 #{calc((map-get($pagination-dot, default) - map-get($border-width, default)) / 2)};
					}
					@if ('flat' == $form-theme) {
						margin: 0 #{calc(map-get($pagination-dot, flat) / 2)};
					}
					@if ('bold' == $form-theme) {
						margin: 0 #{calc((map-get($pagination-dot, bold) - map-get($border-width, bold)) / 2)};
					}
					position: relative;
					z-index: 0;

					@if ('bold' != $form-theme) {

						&:before {
							content: " ";
							@if ('default' == $form-theme or 'basic' == $form-theme) {
								width: #{map-get($border-width, default) * 3};
							}
							@if ('flat' == $form-theme) {
								width: 3px;
							}
							height: 100%;
							display: block;
							position: absolute;
							top: 0;
							@if ('default' == $form-theme or 'basic' == $form-theme) {
								left: -#{map-get($border-width, default)};
							}
							@if ('flat' == $form-theme) {
								left: -1px;
							}
							transition: map-get($transition, linear);
						}
					}

					&:first-child,
					&:last-child {
						display: none;
					}
				}

				.forminator-step {
					@if ('default' == $form-theme or 'basic' == $form-theme) {
						height: map-get($pagination-dot, default);
					}
					@if ('flat' == $form-theme) {
						height: map-get($pagination-dot, flat);
					}
					@if ('bold' == $form-theme) {
						height: map-get($pagination-dot, bold);
					}
					cursor: pointer;
					display: flex;
					flex-direction: row-reverse;
					justify-content: flex-end;
					align-items: center;
					margin: 0;
					padding: 0;
					border: 0;
					border-radius: 0;
					background-color: transparent;
					box-shadow: none;
					text-transform: none;
					text-decoration: none;

					&:focus,
					&:focus-visible {
						outline-offset: 10px;
					}

					.forminator-step-label {
						overflow: hidden;
						display: block;
						flex: 1;
						line-height: 1.6em;
						text-overflow: ellipsis;
						white-space: nowrap;

						+ .forminator-step-dot {
							margin-right: 5px;
						}
					}

					.forminator-step-dot {
						@if ('default' == $form-theme or 'basic' == $form-theme) {
							width: map-get($pagination-dot, default);
							height: map-get($pagination-dot, default);
						}
						@if ('flat' == $form-theme) {
							width: map-get($pagination-dot, flat);
							height: map-get($pagination-dot, flat);
						}
						@if ('bold' == $form-theme) {
							width: map-get($pagination-dot, bold);
							height: map-get($pagination-dot, bold);
						}
						display: block;
						@if ('default' == $form-theme or 'basic' == $form-theme) {
							flex: 0 0 map-get($pagination-dot, default);
							border-width: map-get($border-width, default);
							border-style: map-get($border-style, default);
							border-radius: #{map-get($pagination-dot, default) * 2};
						}
						@if ('flat' == $form-theme) {
							flex: 0 0 map-get($pagination-dot, flat);
							border-width: map-get($border-width, flat);
							border-style: map-get($border-style, flat);
							border-radius: #{map-get($pagination-dot, flat) * 2};
							transform: scale(1.3);
							transform-origin: center;
							transition: map-get($transition, linear);
						}
						@if ('bold' == $form-theme) {
							flex: 0 0 map-get($pagination-dot, bold);
							border-width: map-get($border-width, bold);
							border-style: map-get($border-style, bold);
							border-radius: #{map-get($pagination-dot, bold) * 2};
						}
					}

					&.forminator-current {

						~ .forminator-break {

							&:before {
								height: 0;
							}
						}

						@if ('flat' == $form-theme or 'basic' == $form-theme) {

							~ .forminator-step {

								.forminator-step-dot {
									transform: scale(1);
								}
							}
						}
					}
				}
			}
		}

		@if ('material' == $form-theme) {

			.forminator-pagination-steps {
				counter-reset: pagination-steps;
				margin: 0 0 $gutter-sm;

				.forminator-break {
					width: map-get($border-width, material);
					height: map-get($pagination-dot, material);
					margin: 0 #{calc((map-get($pagination-dot, material) - map-get($border-width, material)) / 2)};

					&:first-child,
					&:last-child {
						display: none;
					}
				}

				.forminator-step {
					height: map-get($pagination-dot, material);
					display: flex;
					flex-direction: row-reverse;
					justify-content: flex-end;
					align-items: center;
					margin: 0;
					padding: 0;
					border: 0;
					border-radius: 0;
					background-color: transparent;
					box-shadow: none;
					text-transform: none;
					text-decoration: none;

					.forminator-step-label {
						overflow: hidden;
						display: block;
						flex: 1;
						line-height: 1.6em;
						text-overflow: ellipsis;
						white-space: nowrap;

						+ .forminator-step-dot {
							margin-right: 5px;
						}
					}

					.forminator-step-dot {
						width: map-get($pagination-dot, material);
						height: map-get($pagination-dot, material);
						border-radius: #{map-get($pagination-dot, material) * 2};

						&:before {
							display: block;
							content: counter(pagination-steps);
							counter-increment: pagination-steps;
							line-height: map-get($pagination-dot, material);
							text-align: center;
						}
					}
				}
			}
		}
	}

	@include form-class($form-type, $form-theme, true) {

		@if ('material' != $form-theme) {

			.forminator-pagination-steps {

				.forminator-break {

					&:before {

						@include media(min-width, sm) {
							width: 100%;
							@if ('default' == $form-theme or 'basic' == $form-theme) {
								height: #{map-get($border-width, default) * 3};
								top: -#{map-get($border-width, default)};
							}
							@if ('flat' == $form-theme) {
								height: 3px;
								top: -1px;
							}
							left: 0;
						}
					}

					&:first-child,
					&:last-child {

						@include media(min-width, sm) {
							display: block;
						}
					}

					@include media(min-width, sm) {
						width: auto;
						@if ('default' == $form-theme or 'basic' == $form-theme) {
							height: map-get($border-width, default);
						}
						@if ('flat' == $form-theme) {
							height: 1px;
						}
						@if ('bold' == $form-theme) {
							height: map-get($border-width, bold);
						}
						flex: 1;
						@if ('default' == $form-theme or 'basic' == $form-theme) {
							margin: #{calc((map-get($pagination-dot, default) - map-get($border-width, default)) / 2)} 0;
						}
						@if ('flat' == $form-theme) {
							margin: #{calc(map-get($pagination-dot, flat) / 2)} 0;
						}
						@if ('bold' == $form-theme) {
							margin: #{calc((map-get($pagination-dot, bold) - map-get($border-width, bold)) / 2)} 0;
						}
					}
				}

				.forminator-step {

					.forminator-step-label {

						+ .forminator-step-dot {

							@include media(min-width, sm) {
								margin-top: 5px;
								margin-right: 0;
							}
						}

						@include media(min-width, sm) {
							overflow: unset;
							text-align: center;
							text-overflow: unset;
							white-space: normal;
							word-break: normal;
						}
					}

					&.forminator-current {

						~ .forminator-break {

							&:before {

								@include media(min-width, sm) {
									width: 0;
								}
							}
						}
					}

					@include media(min-width, sm) {
						@if ('default' == $form-theme or 'basic' == $form-theme) {
							width: map-get($pagination-dot, default);
						}
						@if ('flat' == $form-theme) {
							width: map-get($pagination-dot, flat);
						}
						@if ('bold' == $form-theme) {
							width: map-get($pagination-dot, bold);
						}
						height: auto;
						flex: 0 0 auto;
						flex-direction: column;
						justify-content: unset;
					}
				}

				@include media(min-width, sm) {
					display: flex;
					flex-direction: row;
					align-items: flex-end;
					margin-bottom: $gutter;
				}
			}
		}

		@if ('material' == $form-theme) {

			.forminator-pagination-steps {

				.forminator-break {

					@include media(min-width, sm) {
						width: auto;
						min-width: map-get($pagination-dot, material);
						height: map-get($border-width, material);
						flex: 1;
						margin: 0 #{calc($gutter / 2)};
					}
				}

				.forminator-step {

					.forminator-step-label {

						@include media(min-width, sm) {
							overflow: unset;
							text-overflow: unset;
							white-space: normal;
						}
					}

					@include media(min-width, sm) {
						height: auto;
						flex: 0 1 auto;
					}
				}

				@include media(min-width, sm) {
					display: flex;
					align-items: center;
					margin-bottom: $gutter;
				}
			}
		}
	}
}