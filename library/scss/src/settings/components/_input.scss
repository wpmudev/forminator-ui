@mixin component-input($form-type: no-type, $form-theme: no-theme) {

	@include form-class($form-type, $form-theme, false) {

		.forminator-input {
			width: 100%;			
			display: block;
			@if ('basic' == $form-theme) {
				appearance: auto;
				max-width: 100%;
			}
			@if ('basic' != $form-theme) {
				box-sizing: border-box;
				min-width: unset;
				max-width: unset;
				min-height: unset;
				max-height: unset;
				height: auto;
				line-height: map-get($input, line-height);
				background-image: unset;
				transition: map-get($transition, ease);
				margin: 0;
			}
			@if ('default' == $form-theme) {
				padding: #{map-get($input, padding) - map-get($border-width, default)};
				border-width: map-get($border-width, default);
				border-style: map-get($border-style, default);
				border-radius: map-get($border-radius, default);
			}
			@if ('flat' == $form-theme) {
				padding: map-get($input, padding);
				border-width: map-get($border-width, flat);
				border-style: map-get($border-style, flat);
				border-radius: map-get($border-radius, flat);
			}
			@if ('bold' == $form-theme) {
				padding: #{map-get($input, padding) - map-get($border-width, bold)};
				border-width: map-get($border-width, bold);
				border-style: map-get($border-style, bold);
				border-radius: map-get($border-radius, bold);
			}
			@if ('material' == $form-theme) {
				padding: map-get($input, padding) 0 #{map-get($input, padding) - map-get($border-width, $form-theme)};
				border-width: 0;
				border-bottom-width: map-get($border-width, $form-theme);
				border-style: map-get($border-style, $form-theme);
				border-radius: 0;
				background-color: transparent !important;
			}

			@if ('basic' != $form-theme) {
				&,
				&:hover,
				&:focus,
				&:active,
				&:disabled {
					outline: none;
					box-shadow: none;
				}

				&:disabled:not(.forminator-calculation) {
					border-style: dotted;
				}

				&:disabled {
					pointer-events: none;

					&:-moz-placeholder {
						@include opacity(0.4);
					}

					&::-moz-placeholder {
						@include opacity(0.4);
					}

					&:-ms-input-placeholder {
						@include opacity(0.4);
					}

					&::-webkit-input-placeholder {
						@include opacity(0.4);
					}
				}
			}
		}

		.forminator-custom-input {
			display: none;
		}

		@if ('material' == $form-theme) {

			.forminator-input--wrap {
				display: block;
				position: relative;

				&:after {
					content: " ";
					height: #{map-get($border-width, $form-theme) * 2};
					display: block;
					position: absolute;
					right: 50%;
					bottom: 0;
					left: 50%;
					box-sizing: border-box;
					transition: map-get($transition, linear);
				}
			}

			.forminator-field {
				&.forminator-is_hover,
				&.forminator-is_active,
				&.forminator-has_error {

					.forminator-input--wrap {

						&:after {
							right: 0;
							left: 0;
						}
					}
				}
			}
		}
	}
}