$quiz: (
	image:    170px,
	image-sm: 80px,
	spacing:  10px,
	checkbox: 30px,
) !default;

@mixin component-answers($form-type: no-type, $form-theme: no-theme) {

	@include form-class($form-type, $form-theme, false) {

		.forminator-answer {
			user-select: none;
			-webkit-tap-highlight-color: transparent;
			pointer-events: none;
			display: block;
			position: relative;

			input[type="radio"],
			input[type="checkbox"] {
				@extend %screen-readers;

				&:disabled,
				&[disabled] {

					&:not(:checked):not([checked]) {

						+ .forminator-answer--design {
							@include opacity(0.6);

							@if $form-theme == 'material' {

								.forminator-answer--image {

									+ .forminator-answer--status {
										display: none;
									}
								}
							}
						}
					}

					+ .forminator-answer--design {
						pointer-events: none;
					}
				}

				@if $form-theme == 'material' {

					&:checked,
					&[checked] {

						+ .forminator-answer--design {
							box-shadow: 0 3px 8px 0 rgba(0,0,0,0.3);

							.forminator-answer--image {

								&:before {
									@include opacity(1);
								}
							}
						}
					}
				}
			}

			.forminator-answer--design {
				cursor: pointer;
				pointer-events: all;
				display: flex;
				align-items: center;
				flex-wrap: nowrap;
				flex-direction: row;
				@if $form-theme == 'default' {
					padding: #{map-get($quiz, spacing) - map-get($border-width, default)};
					border-width: map-get($border-width, default);
					border-style: map-get($border-style, default);
					border-radius: map-get($border-radius, default);
				} @else if $form-theme == 'flat' {
					padding: #{map-get($quiz, spacing) - map-get($border-width, flat)};
					border-width: map-get($border-width, flat);
					border-style: map-get($border-style, flat);
					border-radius: map-get($border-radius, flat);
				} @else if $form-theme == 'bold' {
					padding: #{map-get($quiz, spacing) - map-get($border-width, bold)};
					border-width: map-get($border-width, bold);
					border-style: map-get($border-style, bold);
					border-radius: map-get($border-radius, bold);
				} @else if $form-theme == 'material' {
					position: relative;
					padding: map-get($quiz, spacing);
					border-width: 0;
					border-style: none;
					border-radius: map-get($border-radius, material);
					box-shadow: 0 1px 1px 0 rgba(0,0,0,0.3);
				}
				transition: $transition--ease;

				@if $form-theme == 'material' {

					&:hover {
						box-shadow: 0 3px 8px 0 rgba(0,0,0,0.3);
					}
				}

				.forminator-answer--image {
					width: map-get($quiz, image-sm);
					height: map-get($quiz, image-sm);
					display: block;
					@if $form-theme == 'default' or $form-theme == 'flat' or $form-theme == 'bold' {
						flex: 0 0 auto;
					} @else if $form-theme == 'material' {
						position: relative;
					}
					background-repeat: no-repeat;
					background-position: center;
					background-size: cover;

					@if $form-theme == 'material' {

						&:before {
							content: " ";
							width: 100%;
							height: 100%;
							@include opacity(0);
							display: block;
							position: absolute;
							top: 0;
							left: 0;
							background-color: rgba(0,0,0,0.6);
							transition: $transition--ease;
						}
					}

					span {
						@extend %screen-readers;
					}

					+ .forminator-answer--status {
						@if $form-theme == 'default' or $form-theme == 'flat' or $form-theme == 'bold' {
							margin-top: #{(map-get($quiz, image-sm) - map-get($quiz, checkbox)) / 2};
							margin-bottom: #{(map-get($quiz, image-sm) - map-get($quiz, checkbox)) / 2};
							margin-left: map-get($quiz, spacing);
						} @else if $form-theme == 'material' {
							position: absolute;
						}
					}
				}

				.forminator-answer--status {
					width: map-get($quiz, checkbox);
					height: map-get($quiz, checkbox);
					display: flex;
					flex: 0 0 auto;
					align-items: center;
					justify-content: center;
					transition: $transition--ease;

					[class*="forminator-icon-"] {
						display: block;
						font-size: 12px;
						line-height: 12px;

						&:before {
							display: block;
						}
					}

					+ .forminator-answer--name {
						margin-left: map-get($quiz, spacing);
					}
				}

				.forminator-answer--name {
					min-width: 1px;
					display: block;
					flex: 1;
					line-height: 1.75em;
					align-self: center;
				}
			}

			.forminator-answer--status {
				@if $form-theme == 'default' {
					border-width: map-get($border-width, default);
					border-style: map-get($border-style, default);
					border-radius: map-get($border-radius, default);
				} @else if $form-theme == 'flat' {
					border-width: map-get($border-width, flat);
					border-style: map-get($border-style, flat);
					border-radius: map-get($border-radius, flat);
				} @else if $form-theme == 'bold' {
					border-width: map-get($border-width, bold);
					border-style: map-get($border-style, bold);
					border-radius: map-get($border-radius, bold);
				} @else if $form-theme == 'material' {
					border-width: 2px;
					border-style: map-get($border-style, material);
					border-radius: map-get($border-radius, material);
					background-color: transparent !important;
				}
			}

			// STATE: Focus.
			&:focus {
				outline: none;
				box-shadow: none;
			}

			// STATE: Only image.
			&.forminator-only--image {
				width: #{map-get($quiz, image-sm) + (map-get($quiz, spacing) * 2)};

				@if $form-theme == 'default' or $form-theme == 'flat' or $form-theme == 'bold' {

					.forminator-answer--status,
					.forminator-answer--name {
						display: none;
					}
				} @else if $form-theme == 'material' {

					.forminator-answer--design {

						.forminator-answer--status {
							top: 50%;
							left: 50%;
							margin-top: -#{map-get($quiz, checkbox) / 2};
							margin-left: -#{map-get($quiz, checkbox) / 2};
						}

						.forminator-answer--name {
							display: none;
						}
					}
				}
			}

			@if $form-theme == 'material' {

				&:not([class*="forminator-only-"]) {

					.forminator-answer--design {

						.forminator-answer--status {
							top: #{((map-get($quiz, image-sm) - map-get($quiz, checkbox)) / 2) + map-get($quiz, spacing)};
							left: #{((map-get($quiz, image-sm) - map-get($quiz, checkbox)) / 2) + map-get($quiz, spacing)};
						}
					}
				}
			}
		}

		// QUESTION TYPE: Personality.
		.forminator-question[data-question-type="personality"] {

			.forminator-answer {

				input[type="radio"],
				input[type="checkbox"] {

					&:checked + .forminator-answer--design {

						.forminator-answer--status {

							[class*="forminator-icon-"] {
								@include opacity(1);
							}
						}
					}
				}

				.forminator-answer--design {

					.forminator-answer--status {

						[class*="forminator-icon-"] {
							@include opacity(0);
						}
					}
				}
			}
		}

		// LAYOUT: List.
		&.forminator-quiz--list {

			// ALIGNMENT: Center.
			&[data-alignment="center"] {

				.forminator-answer {

					// STATE: Only image.
					&.forminator-only--image {
						margin-right: auto;
						margin-left: auto;
					}
				}
			}

			// ALIGNMENT: Right.
			&[data-alignment="right"] {

				.forminator-answer {

					// STATE: Only image.
					&.forminator-only--image {
						margin-right: 0;
						margin-left: auto;
					}
				}
			}
		}
	}

	@include form-class($form-type, $form-theme, true) {

		// LAYOUT: Grid.
		&.forminator-quiz--grid {

			.forminator-answer {

				.forminator-answer--design {

					.forminator-answer--image {

						~ [class*="forminator-answer-"] {

							@include media(min-width, sm) {

								@if $form-theme == 'default' or $form-theme == 'flat' or $form-theme == 'bold' {
									margin-top: map-get($quiz, spacing);
								}
							}
						}

						+ .forminator-answer--status {

							@include media(min-width, sm) {

								@if $form-theme == 'default' or $form-theme == 'flat' or $form-theme == 'bold' {
									margin-left: 0;
								}
							}
						}

						@include media(min-width, sm) {
							width: 100%;
							height: map-get($quiz, image);
							@if $form-theme == 'default' or $form-theme == 'flat' or $form-theme == 'bold' {
								flex: 0 0 auto;
							}
						}
					}

					.forminator-answer--status {

						@include media(min-width, sm) {

							@if $form-theme == 'default' or $form-theme == 'flat' or $form-theme == 'bold' {
								margin-bottom: 0;
							}
						}
					}

					@include media(min-width, sm) {
						flex-wrap: wrap;
					}
				}

				// STATE: Only image.
				&.forminator-only--image {

					@include media(min-width, sm) {

						@if $form-theme == 'default' or $form-theme == 'flat' or $form-theme == 'bold' {
							width: 100%;
						}
					}
				}

				@if $form-theme == 'material' {

					&:not([class*="forminator-only-"]) {

						.forminator-answer--design {

							.forminator-answer--status {

								@include media(min-width, sm) {
									top: #{map-get($quiz, spacing) * 2};
									right: #{map-get($quiz, spacing) * 2};
									left: auto;
								}
							}
						}

						.forminator-answer--name {

							@include media(min-width, sm) {
								margin-top: #{map-get($quiz, spacing) + 3px};
								margin-bottom: 3px;
								margin-left: 0;
							}
						}
					}
				}
			}
		}
	}
}