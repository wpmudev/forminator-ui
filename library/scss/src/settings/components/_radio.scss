$radio-image: 80px;

@mixin component-radio($form-type: no-type, $form-theme: no-theme) {

	@include form-class($form-type, $form-theme, false) {

		.forminator-radio {
			cursor: default;
			display: flex;
			align-items: center;
			position: relative;
			margin: 10px 0;

			@if ('basic' != $form-theme) {
				pointer-events: none;
			}

			input {
				@if ('basic' != $form-theme) {
					@extend %screen-readers;
				}

				&:checked {

					@if ('material' == $form-theme) {

						&:focus {

							+ .forminator-radio-bullet:after {
								animation-name: click-animation;
							}
						}
					}

					+ .forminator-radio-bullet:before {
						@include opacity(1);
					}

					@if ('material' == $form-theme) {

						+ .forminator-radio-bullet:after {
							@include opacity(1);
						}

						~ .forminator-radio-image {
							box-shadow: 0 3px 8px 0 rgba(0,0,0,0.3);
						}
					}
				}
			}

			span {
				cursor: pointer;
				pointer-events: all;
				display: block;
			}

			@if ('basic' != $form-theme) {
				.forminator-radio-bullet {
					width: map-get($radio, size);
					height: map-get($radio, size);
					flex: 0 0 map-get($radio, size);
					position: relative;
					@if ('default' == $form-theme) {
						border-width: map-get($border-width, default);
						border-style: map-get($border-style, default);
					}
					@if ('flat' == $form-theme) {
						border-width: map-get($border-width, flat);
						border-style: map-get($border-style, flat);
					}
					@if ('bold' == $form-theme) {
						border-width: map-get($border-width, bold);
						border-style: map-get($border-style, bold);
					}
					@if ('material' == $form-theme) {
						border-width: #{map-get($border-width, material) * 2};
						border-style: map-get($border-style, material);
					}
					border-radius: #{map-get($radio, size) * 2};

					&:before {
						content: " ";
						@if ('default' == $form-theme) {
							width: #{calc(map-get($radio, size) / 2)};
							height: #{calc(map-get($radio, size) / 2)};
						}
						@if ('flat' == $form-theme) {
							width: #{calc(map-get($radio, size) / 2)};
							height: #{calc(map-get($radio, size) / 2)};
						}
						@if ('bold' == $form-theme) {
							width: #{(calc(map-get($radio, size) / 2)) - map-get($border-width, bold)};
							height: #{(calc(map-get($radio, size) / 2)) - map-get($border-width, bold)};
						}
						@if ('material' == $form-theme) {
							width: #{calc(map-get($radio, size) / 2)};
							height: #{calc(map-get($radio, size) / 2)};
						}
						@include opacity(0);
						display: block;
						position: absolute;
						top: 50%;
						left: 50%;
						border-radius: 100%;
						transform: translate(-50%, -50%);
						transition: map-get($transition, ease);
					}

					@if ('material' == $form-theme) {

						&:after {
							content: " ";
							@include opacity(0);
							width: map-get($radio, size);
							height: map-get($radio, size);
							position: absolute;
							top: 50%;
							left: 50%;
							border-radius: 100%;
							transform: translate(-50%, -50%) scale(0);
							transform-origin: center;
							transform-style: preserve-3d;
							animation-duration: 0.6s;
							animation-fill-mode: both;
						}
					}
				}
			}

			.forminator-radio-bullet {
				@if ('basic' == $form-theme) {
					display: none;
				}
				~ span {
					margin-left: 10px;
				}
			}

			.forminator-radio-label {
				flex: 0 1 auto;

				@if ('basic' != $form-theme) {
					line-height: 20px;
				}
			}

			.forminator-radio-image {
				@if ('material' == $form-theme) {
					position: relative;
					overflow: hidden;
				}
				flex: 0 0 auto;
				@if ('default' == $form-theme) {
					padding: #{5px - (map-get($border-width, default) * 2)};
					border-width: #{map-get($border-width, default) * 2};
					border-style: map-get($border-style, default);
					border-radius: map-get($border-radius, default);
				}
				@if ('flat' == $form-theme) {
					padding: 5px;
					border-width: 0;
					border-style: none;
				}
				@if ('bold' == $form-theme) {
					padding: #{5px - map-get($border-width, bold)};
					border-width: map-get($border-width, bold);
					border-style: map-get($border-style, bold);
					border-radius: map-get($border-radius, bold);
				}
				@if ('material' == $form-theme) {
					border-width: 2px;
					border-color: transparent;
					border-style: solid;
					border-radius: map-get($border-radius, material);
					background-color: #FFF;
					box-shadow: 0 1px 1px 0 rgba(0,0,0,0.3);
					transition: 0.2s ease;
				}

				span {
					width: #{$radio-image - 10px};
					height: #{$radio-image - 10px};
					background-repeat: no-repeat;
					background-size: cover;
					background-position: center;

					span {
						@extend %screen-readers;
					}
				}
			}

			@if ('material' == $form-theme) {

				&:hover {

					.forminator-radio-image {
						box-shadow: 0 3px 8px 0 rgba(0,0,0,0.3);
					}
				}
			}

			// VARIATION: Has Image.
			&.forminator-has_image {

				.forminator-radio-image {
					margin-left: 0;
				}
			}

			// ALIGNMENT: Inline
			&.forminator-radio-inline {
				display: inline-flex;
				vertical-align: middle;
				margin-right: 20px;
				margin-bottom: 0;

				// VARIATION: Has Image.
				&.forminator-has_image {

					// VARIATION: Bullet + Label.
					&.forminator-has_bullet {
						min-width: $radio-image;
						padding-top: #{$radio-image + 10px};

						.forminator-radio-image {
							position: absolute;
							top: 0;
							left: 0;
						}
					}
				}

				&:last-of-type {
					margin-right: 0;
				}
			}

			// ALIGNMENT: Stacked
			&:not(.forminator-radio-inline) {
				margin: 20px 0;

				// VARIATION: Has Image.
				&.forminator-has_image {

					// VARIATION: Bullet + Label.
					&.forminator-has_bullet {

						@if ('basic' == $form-theme) {
							input {
								order: 2;
								margin-left: 10px;
							}
						} @else {
							.forminator-radio-bullet {
								order: 2;
								margin-left: 10px;
							}
						}

						.forminator-radio-label {
							order: 3;
						}

						.forminator-radio-image {
							order: 1;
						}
					}
				}

				&:first-of-type {
					margin-top: 10px;
				}

				&:first-child {
					margin-top: 0;
				}

				&:last-of-type {
					margin-bottom: 10px;
				}

				&:last-child {
					margin-bottom: 0;
				}
			}
		}
	}
}