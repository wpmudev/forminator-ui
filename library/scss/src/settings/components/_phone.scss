@mixin component-phone($form-type: no-type, $form-theme: no-theme) {

	@include form-class($form-type, $form-theme, false) {

		.forminator-phone {
			display: block;

			.flag-container {
				@if ('default' == $form-theme) {
					padding: map-get($border-width, default);
				}
				@if ('flat' == $form-theme) {
					padding: map-get($border-width, flat);
				}
				@if ('bold' == $form-theme) {
					padding: map-get($border-width, bold);
				}

				.selected-flag {
					width: auto;
					display: flex;
					align-items: center;
					margin: 0;
					padding: 0 map-get($input, padding);

					.iti-flag {
						display: block;
						position: relative;
						top: auto;
						bottom: auto;
						margin: 0;
						padding: 0;

						+ .iti-arrow {
							margin-left: #{map-get($input, padding) / 2};
						}
					}

					.iti-arrow {
						display: block;
						position: relative;
						top: auto;
						right: auto;
						margin: 0;
					}

					&:hover,
					&:focus,
					&:active {
						outline: none;
						box-shadow: none;
					}
				}

				&:hover,
				&:focus,
				&:active {
					outline: none;
					box-shadow: none;
				}
			}

			@if ('material' != $form-theme) {

				&.allow-dropdown {

					.forminator-input {
						@if ('default' == $form-theme) {
							padding-left: #{($int-flag-size + (map-get($input, padding) * 2)) + (map-get($input, padding) + map-get($border-width, default))};
						}
						@if ('flat' == $form-theme) {
							padding-left: #{($int-flag-size + (map-get($input, padding) * 2)) + (map-get($input, padding) + map-get($border-width, flat))};
						}
						@if ('bold' == $form-theme) {
							padding-left: #{($int-flag-size + (map-get($input, padding) * 2)) + (map-get($input, padding) + map-get($border-width, bold))};
						}
					}
				}
			}

			&:not(.allow-dropdown) {

				.flag-container {
					pointer-events: none;
				}

				@if ('material' != $form-theme) {

					.forminator-input {
						@if ('default' == $form-theme) {
							padding-right: #{($int-flag-size + (map-get($input, padding) * 2)) + (map-get($input, padding) + map-get($border-width, default))};
						}
						@if ('flat' == $form-theme) {
							padding-right: #{($int-flag-size + (map-get($input, padding) * 2)) + (map-get($input, padding) + map-get($border-width, flat))};
						}
						@if ('bold' == $form-theme) {
							padding-right: #{($int-flag-size + (map-get($input, padding) * 2)) + (map-get($input, padding) + map-get($border-width, bold))};
						}
					}
				}
			}
		}

		.forminator-input-with-phone {
			@if ('material' == $form-theme) {
				//position: unset;
				display: block;
			}

			.flag-container {
				@if ('material' == $form-theme) {
					flex: 0 0 auto;
					position: absolute;
					top: 11px;
					left: 0;
					padding: 0;
				}

				.selected-flag {
					width: 31px;
					display: flex;
					align-items: center;
					margin: 0;
					@if ('material' != $form-theme) {
						padding: 0 map-get($input, padding);
					}
					@if ('material' == $form-theme) {
						padding: map-get($input, padding) 0 #{map-get($input, padding) - map-get($border-width, material)};
						background-color: transparent !important;
					}

					.iti-flag {
						display: block;
						position: relative;
						top: auto;
						bottom: auto;
						margin: 0;
						padding: 0;

						+ .iti-arrow {
							margin-left: #{map-get($input, padding) / 2};
						}
					}

					.iti-arrow {
						display: block;
						position: relative;
						top: auto;
						right: auto;
						margin: 0;
					}

					&:hover,
					&:focus,
					&:active {
						outline: none;
						box-shadow: none;
					}

					@if ('material' == $form-theme) {

						&:first-child {
							margin-right: map-get($input, padding);
						}
					}
				}

				@if ('material' == $form-theme) {

					.forminator-input {
						padding-right: 0;
						padding-left: 0;
					}

					~ span {
						padding-left: #{$int-flag-size + map-get($input, padding)};
					}
				}

				&:hover,
				&:focus,
				&:active {
					outline: none;
					box-shadow: none;
				}
			}

			@if ('material' == $form-theme) {
				.forminator-input--wrap {
					position: absolute;
					top: 0;
				}
			}
		}
	}
}