@mixin component-input-with-icon($form-type: no-type, $form-theme: no-theme) {

	@include form-class($form-type, $form-theme, false) {

		.forminator-input-with-icon {
			@if ('material' != $form-theme) {
				position: relative;
			}
			@else {
				display: flex;
				align-items: center;
			}

			[class*="forminator-icon-"] {
				display: block;
				pointer-events: none;
				@if ('basic' != $form-theme) {
					transition: map-get($transition, ease);
				}
				@if ('material' == $form-theme) {
					flex: 0 0 auto;
				}
				@if ('material' != $form-theme) {
					position: absolute;
					top: 50%;
					left: map-get($input, padding);
				}
				font-size: map-get($icon, size);
				@if ('material' != $form-theme) {
					transform: translateY(-50%);
				}

				&:before {
					color: inherit;
				}

				@if ('material' == $form-theme) {

					&:first-child {
						margin-right: map-get($input, padding);
					}

					&:last-child {
						margin-left: map-get($input, padding);
					}
				}
			}

			@if ('material' != $form-theme) {

				.forminator-input {
					@if ('default' == $form-theme or 'basic' == $form-theme) {
						padding-left: #{(map-get($input, padding) - map-get($border-width, default)) + map-get($input, padding) + map-get($icon, size)};
					}
					@if ('flat' == $form-theme) {
						padding-left: #{(map-get($input, padding) * 2) + map-get($icon, size)};
					}
					@if ('bold' == $form-theme) {
						padding-left: #{(map-get($input, padding) - map-get($border-width, bold)) + map-get($input, padding) + map-get($icon, size)};
					}
				}
			}

			@if ('material' == $form-theme) {

				.forminator-input--wrap {
					display: block;
					flex: 1;
				}

				~ span {
					padding-left: #{map-get($icon, size) + map-get($input, padding)};
				}
			}
		}
	}
}